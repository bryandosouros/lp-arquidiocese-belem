const fs = require('fs');

console.log('üîß PREPARA√á√ÉO PARA MIGRA√á√ÉO');
console.log('============================');
console.log('Este script prepara o ambiente para a migra√ß√£o modificando');
console.log('temporariamente as regras do Firestore para permitir escrita.');
console.log('');

// Fazer backup das regras atuais
if (fs.existsSync('firestore.rules')) {
    fs.copyFileSync('firestore.rules', 'firestore.rules.backup');
    console.log('‚úÖ Backup criado: firestore.rules.backup');
}

// Criar regras tempor√°rias (mais permissivas)
const regrasTemporrarias = `rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // REGRAS TEMPOR√ÅRIAS PARA MIGRA√á√ÉO - PERMITEM ESCRITA SEM AUTENTICA√á√ÉO
    match /posts/{postId} {
      allow read, write: if true;
    }
    
    // Outras cole√ß√µes mant√™m suas regras
    match /roles/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if false; // Desabilitado durante migra√ß√£o
    }
    
    match /comments/{commentId} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    match /newsletter/{docId} {
      allow read, write: if true;
    }
    
    match /contact/{docId} {
      allow read, write: if true;
    }
  }
}`;

// Escrever regras tempor√°rias
fs.writeFileSync('firestore.rules', regrasTemporrarias, 'utf8');
console.log('‚úÖ Regras tempor√°rias aplicadas');

console.log('');
console.log('üìã PR√ìXIMOS PASSOS:');
console.log('1. Fa√ßa deploy das regras: firebase deploy --only firestore:rules');
console.log('2. Execute a migra√ß√£o: node enviar_para_firebase.js');
console.log('3. Restaure as regras: node restaurar_regras.js');
console.log('');
console.log('‚ö†Ô∏è  IMPORTANTE: Lembre-se de restaurar as regras ap√≥s a migra√ß√£o!');
